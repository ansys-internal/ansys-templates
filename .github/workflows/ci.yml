name: GitHub CI
on:
  pull_request:
  push:

env:
  MAIN_PYTHON_VERSION : '3.10'
  pyansys-actions: 'pyansys/actions/.github/workflows'
  DOCUMENTATION_CNAME: 'templates.ansys.com'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: "Run PyAnsys code style checks"
        uses: pyansys/actions/code-style@v1

  doc-build:
    name: Doc building
    runs-on: ubuntu-latest
    steps:
      - name: "Run Ansys documentation building action"
        uses: pyansys/actions/doc-build@v1

  doc-deploy-stable:
    name: Doc stable version deploy
    runs-on: ubuntu-latest
    needs: doc-build
    steps:
      - name: "Deploy stable documentation"
        uses: pyansys/actions/doc-deploy-stable@v1
        with:
            cname: ${{ env.DOCUMENTATION_CNAME }}
            token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Smoke tests
    needs: code-style
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        cfg:
          - {python-version: "3.7", toxenv: "py37"}
          - {python-version: "3.8", toxenv: "py38"}
          - {python-version: "3.9", toxenv: "py39"}
          - {python-version: "3.10", toxenv: "py310"}
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Install dependencies
        run: python -m pip install --upgrade pip ${{ matrix.build-system }} tox

      - name: Run Tox
        run: tox -e ${{ matrix.cfg.toxenv }}-smoke-cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.cfg.python-version ==  ${{ env.MAIN_PYTHON_VERSION }}

  build:
    name: Build package
    needs: [doc-deploy-stable, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipx
          python -m pip install -r requirements/requirements_build.txt
      - name: Build wheel and sdist
        run: |
          python -m build && python -m twine check dist/*
      - name: Upload wheel and sdist to artifacts
        uses: actions/upload-artifact@v3.1.1
        with:
          name: pyasys-templates-packages
          path: dist/
          retention-days: 7

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/download-artifact@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Display structure of downloaded files
        run: ls -R
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip twine
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload --skip-existing ./**/*.whl
          python -m twine upload --skip-existing ./**/*.tar.gz
      - name: Publish to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.tar.gz

